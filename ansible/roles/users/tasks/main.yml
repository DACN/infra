---

- name: Add groups
  group: name={{ item }} state=present
  with_items:
    - sysadmin
    - monitoring
    - others
  tags: add_groups

- name: Add user groups
  group: name={{ item.group | default(item.name) }} state=present
  with_flattened:
    - users.sysadmin
    - users.monitoring
    - users_extra
  tags: users

- name: Add users
  user: name={{ item.name }}
        group='{{ item.group | default(item.name) }}'
        groups='{{ item.groups | default('') }}'
        state=present
        shell=/bin/bash
  with_flattened:
    - users.sysadmin
    - users.monitoring
    - users_extra
  tags: users

# NB: although user's authorized_keys property is a list, only the first key in
# the list is currently managed.
#
# This is a temporary hack until I can get the users vars set up the way I'd
# like them (i.e. with the list of named users only defined once and then the
# list of users that should be present in group_vars/host_vars rather than the
# current arrangement with duplicated users.
- name: Add user SSH keys
  authorized_key:
          user={{ item.name }}
          key="{{ lookup('file', inventory_dir + '/../files/keys/' + item.authorized_keys[0] + '.pub') }}"
          state=present
  with_flattened:
    - users.sysadmin
    - users.monitoring
    - users_extra
  tags: add_ssh_keys
  tags: users

- name: Configuring sudoers
  lineinfile: "dest=/etc/sudoers state=present regexp='^%{{ item }}' line='%{{ item }} ALL=(ALL) NOPASSWD: ALL'"
  with_items:
    - sysadmin
  tags: users

- name: Purging old users
  user: name={{ item }} state=absent
  with_items: users_purge

- include: project.yml
  when: devs_group != 'False'
  tags: check_project
