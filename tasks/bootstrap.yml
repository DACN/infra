---
#ansible-playbook --connection=ssh  --extra-vars="host=s106.okserver.org" tasks/bootstrap.yml -v -k  -i inventory/hosts
- hosts: $host
  gather_facts: false
  connection: ssh
  user: $user
  sudo: true
  vars_files: 
   - ~/ansible/vars/global.yml
   - ~/ansible/vars/users.yml
   - ~/ansible/.private/p.yml
  tasks:
     - name: -> set correct date
       action: shell /usr/sbin/ntpdate pool.ntp.org
       tags: set_date
     ## Add DME record, the DME module is timestamp sensitive, ensure the system clock is in syncd using ntpdate
     ## msg: http://api.dnsmadeeasy.com/V2.0/dns/managed returned 403, with body: {error: ["Request sent with date header too far out of sync.  Difference in times is -98077, header value is 1376666747000"]}
     - name: -> Add DME record
       dnsmadeeasy: account_key="{{ dme_key }}" account_secret="{{ dme_secret }}" domain="{{ hostname_tld }}" state=present record_name="{{ hostname.split('.')[0] }}" record_type='A' record_value="{{ hostip }}"
       tags: setup_dns

     ## Add sysadmin and monitoring users 
     - name: -> add_group
       action: group name=${item} state=present
       with_items:
         - sysadmin
         - monitoring
       tags: add_group
         
     - name: -> add_user
       action: user name=${item.name} group=${item.group} state=present shell=/bin/bash
       with_items: 
         - ${users.sysadmin}
         - ${users.monitoring}
       tags: add_users

     - name: -> install_ssh_keys
       action: authorized_key user=${item.name} state=present key="${item.key}" # key='$FILE(~/ansible/files/users/ssh/${item.name}.pub)'
       with_items: 
          - ${users.sysadmin}
          - ${users.monitoring}
       tags: add_ssh_keys

     - name: sudoers
       lineinfile: "dest=/etc/sudoers state=present regexp='^%${item}' line='%${item} ALL=(ALL) NOPASSWD: ALL'"
       with_items:
          - sysadmin
       tags: sudoers

     - name: set_hostname
       action: shell echo "{{ host }}" > /etc/hostname && echo hostname "{{ host }}"
       tags: set_hostname

# Add project devs if $project is defined
     - name: -> add_project_group
       action: group name=${item} state=present
       with_items:
         - "{{ devs_group }}"
       tags: add_project_group
     
     - name: -> debug_set
       action: debug msg=project is $project
       tags: debug_set
     
     - name: -> add_project_users
       action: user name={{ item.name }} group={{ item.group }} state=present shell=/bin/bash
       with_items: "users.{{ devs_group }}"
       tags: add_project_users
     
     - name: -> install_project_ssh_keys
       action: authorized_key user=${item.name} state=present key="${item.key}"
       with_items: "users.{{ devs_group }}"
       tags: install_project_ssh_keys
     
     - name: setup_project_sudoers
       lineinfile: "dest=/etc/sudoers state=present regexp='^%${item}' line='%${item} ALL=(ALL) NOPASSWD: ALL'"
       with_items:
          - "{{ devs_group }}"
       tags: setup_project_sudoers

     - name: -> generate_locale
       action: shell locale-gen $item

       with_items: $locale_list
       tags: generate_locale

     - name: -> preseed debconf
       action: copy src=~/ansible/files/bootstrap/debconf.preseed dest=/tmp/debconf.preseed force=yes
       tags: preseed_debconf

     - name: -> apt update
       action: apt update_cache=yes


     - name: -> run debconf

       action: shell /usr/bin/debconf-set-selections /tmp/debconf.preseed       
       tags: run_debconf

     - name: apt upgrade
       environment: 
          DEBIAN_FRONTEND: noninteractive
       action: apt upgrade=yes
       tags: apt_upgrade
    
     - name: install basic packages
       action: apt state=installed pkg=${item}  
       with_items:
          - vim-nox
          - sudo
          - man-db
          - bsd-mailx

     - name: add project sysadmin alias
       lineinfile: "dest=/etc/aliases state=present regexp='^root:' line='root: ${sysadmin_email}'"
       tags: set_project_sysadmin_email

     - name: newaliases
       action: command /usr/bin/newaliases
       tags: run_newaliases
     
     - name: debug_projectvars
       action: debug msg="${project} ${sysadmin_email}"
       tags: debug_projectvars 

     
#     - name: disable_root_login
#       lineinfile: "dest=/etc/ssh/sshd_config state=present regexp='^PermitRootLogin' line='PermitRootLogin no'" 
#       tags: disable_root_login


#TODO : maintain a list of rackspace IPs, allow them via tcpwrappers
#def rackspace_managed_allow_ssh_pw():
#    RS_SSH_CLIENTS = '89.16.174.136,10.0.0.0/12,212.100.224.13,212.100.224.20,212.100.225.0/24,72.3.128.0/23,72.3.130.0/26,72.3.218.80/28,72.3.223.8/29,72.32.192.0/24,72.32.94.80/29,72.4.112.112/28,72.4.123.0/24,74.205.2.0/24,74.205.28.0/26,78.136.44.0/26,83.138.138.174,83.138.139.8,83.138.146.192/27,83.138.149.133,83.138.151.69,89.234.21.64/28,89.234.31.0/25,92.52.121.80/28,92.52.126.0/23,92.52.76.140,92.52.78.14,94.236.100.0/25,94.236.7.185,98.129.223.0/24,50.56.228.0/27,50.56.230.0/27,50.57.32.48/28,50.57.61.0/26,64.39.0.0/23,64.39.2.144/28,64.49.200.192/27,66.216.111.0/25,66.216.111.128/25,66.216.125.0/27,66.216.65.192/27,66.216.70.224/28,66.216.93.64/28,67.192.155.96/27,67.192.2.192/26,69.20.0.0/23,69.20.0.0/29,69.20.0.1,69.20.0.12,69.20.0.4,69.20.0.64/27,69.20.123.0/28,69.20.80.0/28,120.136.32.192/27,120.136.32.96/28,120.136.33.0/25,120.136.34.16/28,120.136.34.22,120.136.34.36,120.136.34.44,120.136.35.16/28,173.203.32.136/29,173.203.4.129,173.203.4.130,173.203.4.161,173.203.4.162,173.203.4.180,173.203.5.0/24,173.203.5.160/27,174.143.23.0/25,174.143.23.128/25,180.150.149.64/26,184.106.8.160/28,209.61.136.64/26,78.46.245.250/32,50.57.22.125'
#    append('/etc/ssh/sshd_config', '\n\n# Allow RackSpace to login with password\nMatch Address %s \n    PasswordAuthentication yes' % RS_SSH_CLIENTS, use_sudo=True)
#    sudo('reload ssh')

