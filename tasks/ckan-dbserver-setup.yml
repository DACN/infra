---
# run with
#  ansible-playbook --connection=ssh  --extra-vars="host=s103.okserver.org" tasks/ckan-dbserver-setup.yml  -i inventory/hosts  -vv --tags="jetty_config,fetch_solr_config"
# to run specific tasks use
#  ansible-playbook --connection=ssh  --extra-vars="host=s103.okserver.org" tasks/ckan-dbserver-setup.yml  -i inventory/hosts  -vv --tags="jetty_config,fetch_solr_config"
- hosts: $host
  user: okfn
  sudo: yes
  gather_facts: False
  vars:
   - project: ckan
   - host: $inventory_hostname
   - role: dbserver
   - devs_group: ${project}_dev #jinja2 doesnt tolerate -'s

  vars_files:
   - ~/ansible/vars/global.yml
   - ~/ansible/vars/users.yml

  handlers:
  - include: ~/ansible/handlers/common.yml

  tasks:

#     - name: -> test_variable
#       action: debug msg="${item[0]} ${item[1]}"
#       with_nested:
#          - ${sites}
#       with_items: users.{{ devs_group }}
#       tags: test_variable

     - name: -> add_group
       action: group name=${item} state=present
       with_items:
         - ${devs_group}
       tags: add_group

     - name: -> add_user
       action: user name=${item.name} group=${item.group} state=present shell=/bin/bash
       with_items: users.{{ devs_group }}
       tags: add_users

     - name: -> install_ssh_keys"
       action: authorized_key user=${item.name} state=present key="${item.key}"
       with_items: users.{{ devs_group }}

       tags: install_ssh_keys

     - name: sudoers
       lineinfile: "dest=/etc/sudoers state=present regexp='^%${item}' line='%${item} ALL=(ALL) NOPASSWD: ALL'"
       with_items:
          - ${devs_group}
       tags: sudoers

     - name: -> install packages
       action: apt pkg=${item} state=installed
       tags: install_packages
       with_items:
          - htop
          - git
          - python-dev
          - python-psycopg2
          - libpq-dev
          - postgresql-9.1
          - postgresql-9.1-postgis
          - solr-jetty
          - openjdk-6-jre
          - openjdk-6-jdk
          - ufw
          - pgtune

     - name: set_sysctl_shmmax
       action: sysctl name=kernel.shmmax value=1143210240 state=present reload=yes sysctl_file=/etc/sysctl.conf
       tags: set_sysctl_shmmax
       ignore_errors: true

     - name: backup_postgres_config
       action: command cp /etc/postgresql/9.1/main/postgresql.conf /etc/postgresql/9.1/main/${item}.orig creates=/etc/postgresql/9.1/main/${item}.orig
       with_items:
          - postgresql.conf
          - pg_hba.conf
       tags: backup_postgres_config
      
     - name: setup_postgres_config
       action: copy src=~/ansible/files/postgresql/9.1/${project}/postgresql.conf dest=/etc/postgresql/9.1/main/postgresql.conf.new 
       tags: setup_postgres_config

     - name: setup_postgres_config2
       action: copy src=~/ansible/files/postgresql/9.1/${project}/pg_hba.conf dest=/etc/postgresql/9.1/main/pg_hba.conf mode=640 force=yes 
       #lineinfile:  "dest=/etc/postgresql/9.1/main/postgresql.conf state=present regexp='^#listen_addresses' line='listen_addresses = '*''"
       tags: setup_postgres_config2

     - name: run_pgtune
       action: command pgtune -i /etc/postgresql/9.1/main/postgresql.conf.new -o /etc/postgresql/9.1/main/postgresql.conf creates=/etc/postgresql/9.1/main/postgresql.conf
       tags: run_pgtune

     - name: jetty_config
       action: copy  src=~/ansible/files/jetty/${project}/jetty.conf dest=/etc/default/jetty force=yes
       tags: jetty_config

       ##start solr setup 
     - name: fetch_solr_config
       action: command wget https://raw.github.com/okfn/ckan/master/ckan/config/solr/schema-2.0.xml -O /etc/solr/conf/schema.xml creates=/etc/solr/conf/schema.xml
       tags: fetch_solr_config
       ignore_errors: true

     - name: place_solr_xml
       action: template src=~/ansible/templates/solr/${project}/solr.xml.j2 dest=/usr/share/solr/solr.xml
       tags: place_solr_xml

     - name: create_solr_varlib_dirs
       action: file path=/var/lib/solr/data/${item} state=directory owner=jetty group=jetty
       with_items: solr_cores
       tags: create_solr_varlib_dirs
    
     - name: create_solr_usrshare_dirs
       action: file path=/usr/share/solr/${item} state=directory owner=root group=root
       with_items: solr_cores
       tags: create_solr_usrshare_dirs

     - name: create_solr_etc_dirs
       action: command mkdir /etc/solr/${item} creates=/etc/solr/${item}
       with_items: solr_cores
 
     - name: create_solr_etc_dirs
       action: command cp -aR /etc/solr/conf /etc/solr/${item}/  creates=/etc/solr/${item}/conf
       with_items: solr_cores
     
     - name: move_solr_orig_config
       action: command mv /etc/solr/conf /etc/solr/conf.orig creates=/etc/solr/conf.orig
       
     - name: create_solr_usr_links
       action: file src=/etc/solr/${item}/conf dest=/usr/share/solr/${item}/conf state=link
       with_items: solr_cores
 
     - name: solrconfig_xml
       action: file src=~/ansible/files/solr/${project}/solrconfig-multicore.xml dest=/etc/solr/${item}/conf/solrconfig.xml state=file
       with_items: solr_cores
       notify: restart jetty
       ##end solr setup
   

     - name: datastore_users
       action: postgresql_user user=${site_id}-${item} password=$PASSWORD(~/ansible/.private/postgresql/${project}/${site_id}-${item})
       with_items:
          - datastore-readwrite
          - datastore-readonly
       sudo_user: postgres
       tags: create_datastore_users

     - name: ckan_ckan_user
       action: postgresql_user user=${site_id} password=$PASSWORD(~/ansible/.private/postgresql/${project}/${site_id}) 
       sudo_user: postgres
       tags: create_ckan_user
    
     - name: create_ckan_db
       postgresql_db: db=${site_id} 
       sudo_user: postgres
       tags: create_ckan_db

     - name: create_datastore_db
       action: postgresql_db db=${site_id}-datastore
       sudo_user: postgres
       tags: create_ckan_db

     - name: set_ckan_db_perms
       postgresql_privs: >
          db=${site_id}
          privs=ALL
          type=database
          role=${site_id}
       ignore_errors: True
       sudo_user: postgres
       tags: set_ckan_db_perms

# ansible module being bugging, this doesnt seem to work 
#     - name: set_datastore_readonly
#       postgresql_privs: >
#          db=${site_id}-datastore
#          privs=SELECT
#          type=database 
#          role=${site_id}-datastore-readonly
#       ignore_errors: True
#       sudo_user: postgres
#       tags: set_datastore_readonly
#      
#     - name: set_datastore_readwrite
#       postgresql_privs: >
#          db=${site_id}-datastore
#          privs=SELECT,INSERT,UPDATE
#          type=database 
#          role=${site_id}-datastore-readwrite
#       ignore_errors: True
#       sudo_user: postgres
#       tags: set_datastore_readwrite

     - name: -> ufw config
       action: template src=~/ansible/templates/ufw/${project}/${role}.ufw.j2 dest=/lib/ufw/user.rules force=yes owner=root group=root mode=640
       tags: ufw_config

     - name: ufw_enable
       action: command /usr/sbin/ufw --force enable
       tags: ufw_enable
       notify: restart ufw

