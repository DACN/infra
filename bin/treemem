#!/bin/bash

if [[ -z "${1}" ]]; then
  echo "Usage $(basename "${0}") [PID [PID [PID]...]]"
  exit 1
fi

COL=8

child_pids () {
  local ppid="${1}"
  ps -e -opid=,ppid= | grep " ${ppid}$" | awk '{print $1}' | xargs
}

parent_pids () {
  local pid="${1}"
  while [[ "${pid}" -ne 0 ]]; do 
    echo "${pid}"
    pid=$(ps -p"${pid}" -oppid= | sed 's/[[:space:]]//g')
  done | xargs
}

print_indent () {
  local indent="${1}"
  while ((indent > 0)); do
    echo -n " "
    ((indent -= 1))
  done
}

descend_tree () {
  local indent="${1}"
  local pid="${2}"

  for p in $(parent_pids "${pid}"); do
    if [[ "${p}" -eq "${PPID}" ]]; then
      echo "WARNING: Skipping current process (${pid}) to avoid an infinite loop" >&2
      return
    fi
  done

  echo "${indent}" "${pid}"

  for p in $(child_pids "${pid}"); do
    descend_tree $((${indent} + 1)) "${p}"
  done
}

TOTAL=0

printf "%-${COL}s %-${COL}s %s\n" "PID" "RSS" "COMMAND"

for ROOT_PID in ${*}; do
  while read line; do
    ind=$(echo "${line}" | awk '{print $1}')
    pid=$(echo "${line}" | awk '{print $2}')

    ps_output=$(ps -p"${pid}" -orss=,args=)

    if [[ -n "${ps_output}" ]]; then
      rss=$(echo "${ps_output}" | awk '{print $1}')
      comm=$(echo "${ps_output}" | awk '{$1=""; print $0}' | sed 's/^[[:space:]]//')

      ((TOTAL += rss))

      print_indent "${ind}"
      printf "%-$(( (($COL - $ind) > 0) * ($COL - $ind) ))s %-${COL}s %s\n" "${pid}" "${rss}" "${comm}"
    fi
  done < <(descend_tree 0 "${ROOT_PID}")
done

echo ""
echo "Total memory usage: $((TOTAL / 1024)) MiB (${TOTAL} bytes)"
